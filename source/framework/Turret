package com.tiledungeon.main;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.Random;

public class Turret extends Entity{
	
	public int maxHealth;
	
	private Handler handler;
	private Player player;
	private Spawn spawner;
	private Game game;
	
	private Random r = new Random();
	
	private int attackCooldown = 0;

	public Turret(double x, double y, double velX2, double velY2, EntityID id, int health, int maxHealth, int size, Player player, Handler handler, Spawn spawner, Game game) {
		super(x, y, velX2, velY2, id, health, maxHealth, size);
		this.player = player;
		this.handler = handler;
		this.spawner = spawner;
		this.game = game;
	}

	public void tick(){
		
		if(attackCooldown > 0) attackCooldown--;
		else if(attackCooldown == 0) attack();
		
		if(health <= 0) {
			player.maxHealth += 10;
			for(int i = 0; i < 10; i++){
				handler.addEntity(new Coin(x, y, 0, 0, EntityID.Coin, -1, -1, 1, game));
			}
			handler.removeEntity(this);
			player.bossesKilled++;
			spawner.bossSpawned = false;
			
		}
	}
	
	private void attack() {
		
		velX = r.nextDouble();
		velY = r.nextDouble();
		if(r.nextBoolean()) velX = -velX;
		if(r.nextBoolean()) velY = -velY;
		
		handler.addEntity(new Arrow(x, y, velX, velY, EntityID.Arrow, 1, 1, 1, handler, game));
		attackCooldown = 10;		
	}

	public void render(Graphics g) {
		g.drawImage(game.spriteSheet.getSubimage(160, 0, 96, 96), (int)x - 48 ,(int)y - 48, null);
		//g.setColor(Color.gray);
		//g.fillRect((int)x - 32, (int)y - 32, 64, 64);
	}

	public Rectangle getBounds() {
		return new Rectangle((int) x ,(int) y, 64, 64);
	}

}
