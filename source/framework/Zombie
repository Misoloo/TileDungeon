package com.tiledungeon.main;
import java.awt.Graphics;
import java.awt.Rectangle;

public class Zombie extends Entity{
	
	private Handler handler;
	private Game game;
	
	private double diffX = 0;
	private double diffY = 0;
	
	private Player player;
	private int attackCooldown = 0;
	
	public Zombie(double x, double y, double velX, double velY, EntityID id, int health, int maxHealth, int size, Player player,Handler handler, Game game){
		super(x, y, velX, velY, id, health, maxHealth, size);
		this.handler = handler;
		this.game = game;
		this.player = player;
	}
	
	public Rectangle getBounds() {
		return new Rectangle((int)x - 16,(int)y - 16, 32, 32);
	}

	public void tick() {
		
		x += velX;
		y += velY;
		
		this.diffX = x - player.getX();
		this.diffY = y - player.getY();
		double distance = Math.sqrt((diffX)*(diffX)+(diffY)*(diffY));
		velX = (-1 / distance * diffX);
		velY = (-1 / distance * diffY);
		
		x = Game.clamp(x, 16, Game.WIDTH - 48);
		y = Game.clamp(y, 16, Game.HEIGHT - 64);
		
		if(attackCooldown > 0) attackCooldown--;
		else if(attackCooldown == 0) attack();
		
		if(health <= 0) {
			handler.addEntity(new Coin(x, y, 0, 0, EntityID.Coin, -1, -1, 1, game));
			handler.removeEntity(this);
			player.enemiesKilled++;
		}
	}

	private void attack() {
		for(int i = 0; i < handler.entities.size(); i++){
			Entity tempEntity = handler.entities.get(i);
			if(tempEntity.getID() == EntityID.Player){
				if(getBounds().intersects(tempEntity.getBounds())){
					player.setHealth(tempEntity.getHealth() - 3);
				}
			}
		}
		attackCooldown = 25;
	}

	public void render(Graphics g) {
		g.drawImage(game.spriteSheet.getSubimage(32, 0, 32, 32), (int)x - 16 ,(int)y - 16, null);
		//g.setColor(Color.red);
		//g.fillRect((int)x - 16, (int)y - 16, 32, 32);
	}
	
}
